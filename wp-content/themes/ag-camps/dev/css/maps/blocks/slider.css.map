{"version":3,"sources":["blocks/slider.scss","01-variables-site/_colors.scss","02-mixins/_mixins-master.scss"],"names":[],"mappings":"AAGA;EACI,kBAAkB,EAAA;EADtB;IAKY,kBAAkB;IAClB,QAAQ;IACR,mCAA2B;YAA3B,2BAA2B;IAC3B,2CAA2B;IAC3B,YAAY;IACZ,WAAW;IACX,oBAAa;IAAb,oBAAa;IAAb,aAAa;IACb,wBAAuB;QAAvB,qBAAuB;YAAvB,uBAAuB;IACvB,yBAAmB;QAAnB,sBAAmB;YAAnB,mBAAmB;IACnB,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,UAAU;IACV,mDAA2C;IAA3C,2CAA2C,EAAA;IAlBvD;MAqBgB,uBAA2B;MAC3B,WCxBc,EAAA;ICsC7B;MFpCD;QA0BgB,WAAW;QACX,YAAY;QACZ,iBAAiB,EAAA,EAExB;EA9BT;IAiCY,OAAO,EAAA;EAjCnB;IAqCY,QAAQ,EAAA;EArCpB;IA0CQ,kBAAkB,EAAA;IA1C1B;MA6CY,SAAS;MACT,cAAc;MACd,kBAAkB,EAAA;MA/C9B;QAkDgB,WAAW;QACX,kBAAkB;QAClB,MAAM;QACN,QAAQ;QACR,SAAS;QACT,OAAO;QACP,sBC1Dc;QD2Dd,YAAY;QACZ,UAAU,EAAA;EA1D1B;IAgEQ,kBAAkB;IAClB,QAAQ;IACR,OAAO;IACP,QAAQ;IACR,mCAA2B;YAA3B,2BAA2B;IAC3B,kBAAkB;IAClB,UAAU,EAAA;IAtElB;MAyEY,WAAW,EAAA;MAzEvB;QEiFM,eFP6C,EAAA;QES7C;UFnFN;YEoFQ,oDAA+I,EAAA,EAMlJ;QAHC;UFvFN;YEwFQ,eFdiD,EAAA,EEgBpD","file":"../../blocks/slider.css","sourcesContent":["@import \"../01-variables-site/variables-site\";\r\n@import \"../02-mixins/mixins-master\";\r\n\r\n.image-slider{\r\n    position: relative;\r\n\r\n    .tns-controls{\r\n        button{\r\n            position: absolute;\r\n            top: 50%;\r\n            transform: translateY(-50%);\r\n            background-color: rgba(#fff, 0.15);\r\n            border: none;\r\n            color: #fff;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            width: 8rem;\r\n            height: 8rem;\r\n            font-size: 2.4rem;\r\n            z-index: 1;\r\n            transition: background-color .3s, color .3s;\r\n\r\n            &:hover{\r\n                background-color: rgba(#fff, 1);\r\n                color: $default_secondary_color;\r\n            }\r\n\r\n            @include media-screen(){\r\n                width: 4rem;\r\n                height: 4rem;\r\n                font-size: 1.2rem;\r\n            }\r\n        }\r\n\r\n        [data-controls=\"prev\"]{\r\n            left: 0;\r\n        }\r\n\r\n        [data-controls=\"next\"]{\r\n            right: 0;\r\n        }\r\n    }\r\n\r\n    .slide{\r\n        position: relative;\r\n\r\n        figure{\r\n            margin: 0;\r\n            line-height: 0;\r\n            position: relative;\r\n\r\n            &:after{\r\n                content: \"\";\r\n                position: absolute;\r\n                top: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                left: 0;\r\n                background-color: $default_secondary_color;\r\n                opacity: 0.5;\r\n                z-index: 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    .content{\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 0;\r\n        right: 0;\r\n        transform: translateY(-50%);\r\n        text-align: center;\r\n        z-index: 1;\r\n        \r\n        h1{\r\n            color: #fff;\r\n            @include fluid-typo(320px, 1200px, 20px, 80px);\r\n        }\r\n    }\r\n\r\n}","\r\n$default_secondary_color: #000; // utilisé pour styler les liens dans le init\r\n$default_main_color: #FFF; // Utilisé couleur des liens en hover dans le init\r\n\r\n// settup des couleurs pour guttenberg (il faut mettre les mêmes valeurs dans la fonctione php)\r\n$color_block_palet1 : #ee1e21;\r\n$color_block_palet2 : #d81b1e;\r\n$color_block_palet3 :#1a191d;\r\n$color_block_palet4 : #231f20;\r\n$color_block_palet5 : #000;\r\n$color_block_palet6 : #fff;\r\n \r\n\r\n$color__background-body: #fff; // couleur du body\r\n$color__background-screen: #f1f1f1; // background-color on focus pour la .screen-reader-text\r\n$color__background-hr: #ccc; // background-color hr\r\n$color__background-pre: #eee; // background-color pre\r\n$color__background-ins: #fff9c0; // background pour mark et ins\r\n\r\n$color__text-screen: #21759b; // color de .screen-reader-text on focus\r\n$color__text-input: #666; // color de tous les input\r\n$color__text-input-focus: #111; // color de tous les input on focus\r\n$color__link: royalblue; // color link // sert aussi pour les étoiles WC et le background de .ui-slider-range\r\n$color__link-visited: purple; // color link on visited\r\n$color__link-hover: midnightblue; // color link on hover/active/focus \r\n$color__text-main: #404040; // color de body, input, select, optgroup, textarea\r\n\r\n$color__background-button: #e6e6e6; // background-color de button, input button, input reset, input submit\r\n$color__background-button-hover: transparent; // background-color au hover de button, input button, input reset, input submit\r\n$color__border-button: #ccc #ccc #bbb; // color des button, input button reset submit\r\n$color__border-button-hover: #ccc #bbb #aaa; // color hover des button, input button reset submit\r\n$color__border-button-focus: #aaa #bbb #bbb; // color button on focus et active\r\n$color__border-input: #ccc; // couleur de la bordure des inputs \r\n$color__border-abbr: #666; // couleur de la border-bottom des abbr, acronym\r\n\r\n$color__select_arrow : str-slice(#{$color__text-input}, 2); // Couleur de la flèche des select.","// centre un block\r\n@mixin center-block {\r\n\tdisplay: block;\r\n\tmargin-left: auto;\r\n\tmargin-right: auto;\r\n}\r\n\r\n// Applique le style pour le .content.\r\n@mixin content(){\r\n  width: 100%;\r\n  max-width: $site__content-max-width;\r\n  padding-left: $site__gutter;\r\n  padding-right: $site__gutter;\r\n  @include center-block();\r\n}\r\n\r\n// Ajoute le clearfix\r\n@mixin clearfix() {\r\n\tcontent: \"\";\r\n\tdisplay: table;\r\n\ttable-layout: fixed;\r\n}\r\n\r\n// Clear after (not all clearfix need this also)\r\n@mixin clearfix-after() {\r\n\tclear: both;\r\n}\r\n\r\n// Le width de la colonne avec la marge\r\n@mixin column-width($numberColumns: 3) {\r\n\twidth: map-get( $columns, $numberColumns ) - ( ( $columns__margin * ( $numberColumns - 1 ) ) / $numberColumns );\r\n}\r\n\r\n\r\n/// Retourne un media query avec la largeur donnée\r\n/// \r\n/// @param {String} $width [76.8em]\r\n/// @param {String} $minMax [min]\r\n@mixin media-screen($width: 76.8em, $minMax: max){\r\n\t@media only screen and (#{$minMax}-width: $width) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n\r\n/// Permet d’appliquer un mixin au root autant que sous un autre sélecteur\r\n/// require SASS 3.4\r\n@mixin optional-at-root($sel) {\r\n  @at-root #{if(not &, $sel, selector-append(&, $sel))} {\r\n    @content;\r\n  }\r\n}\r\n\r\n// Permet de styler les placeholder. Peut être \r\n@mixin placeholder {\r\n  @include optional-at-root('::-webkit-input-placeholder') {\r\n    @content;\r\n  }\r\n\r\n  @include optional-at-root(':-moz-placeholder') {\r\n    @content;\r\n  }\r\n\r\n  @include optional-at-root('::-moz-placeholder') {\r\n    @content;\r\n  }\r\n\r\n  @include optional-at-root(':-ms-input-placeholder') {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Fait en sorte que le texte ait une grosseur fluide avec la largeur de l'écran.\r\n/// Fonctionne seulement avec la même unité (px, em)\r\n///\r\n///\r\n@mixin fluid-typo($min-vw, $max-vw, $min-font-size, $max-font-size) {\r\n  $u1: unit($min-vw);\r\n  $u2: unit($max-vw);\r\n  $u3: unit($min-font-size);\r\n  $u4: unit($max-font-size);\r\n\r\n  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {\r\n    & {\r\n      font-size: $min-font-size;\r\n\r\n      @media screen and (min-width: $min-vw) {\r\n        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));\r\n      }\r\n\r\n      @media screen and (min-width: $max-vw) {\r\n        font-size: $max-font-size;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/// Retire l'unité (px, em, rem, etc.) d'une valeur.\r\n@function strip-unit($value) {\r\n  @return $value / ($value * 0 + 1);\r\n}"]}